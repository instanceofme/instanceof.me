---
// Static generation for the whole collection
import { getCollection } from 'astro:content';
export async function getStaticPaths() {	
	const articles = await getCollection('article');
	return articles.map(article => ({
		params: { slug: article.slug },
		props: { article }
	}));
}

// Render of one page
import Layout from "../layouts/Layout.astro";
import Nav from "../components/Nav.astro";
import NavLink from "../components/NavLink.astro";
const { article } = Astro.props
const { Content } = await article.render();
---

<Layout title={article.data.title} description={article.data.description}>
	<Nav>
		<NavLink href="/" forward>Home</NavLink>
		<NavLink href="/archives" forward>Archives</NavLink>
	</Nav>
	<main>
		<h1>{article.data.title}</h1>
		<Content />
	</main>
	<aside>
		{article.data.evergreen ? "Last edited" : "Published"}
		{article.data.date.toISOString().slice(0, 10)}
	</aside>
</Layout>

<style>
	h1 {
		font-size: 3rem;
	}
	@media (max-width: 50rem) {
		h1 { font-size: 2.5rem; }
	}
	@media (max-width: 35rem) {
		h1 { font-size: 2rem; }
		h2 { font-size: 1.7rem; }
	}
	@media (max-width: 28rem) {
		h1 { font-size: 1.8rem; }
		h2 { font-size: 1.5rem; }
		h3 { font-size: 1.2rem; }
	}
	
	main :global(code, tt) {
		color: green;
	}
	main :global(pre.github-dark > code) {
		color: lightgray;
	}
	main :global(pre.github-dark) {
		padding: .5rem;
		font-size: .8em;
		tab-size: 4;
	}
	main :global(dt) {
		margin-top: 1em;
	}
	
	body {
		max-width: 50rem;
		margin: 0 auto;
	}

	aside {
		display: inline-block;
		padding: .5em 1em 0 0;
		margin-bottom: 1em;
		border-top: 1px solid lightgray;
		font-style: italic;
		font-size: .8em;
	}
</style>
